Grammar

    0 $accept: lines $end

    1 lines: lines equalexpr ';'
    2      | lines ';'
    3      | /* empty */

    4 equalexpr: IDENT EQUAL equalexpr
    5          | expr

    6 expr: expr ADD expr
    7     | expr SUB expr
    8     | expr MUL expr
    9     | expr DIV expr
   10     | LEFTPAR expr RIGHTPAR
   11     | SUB expr
   12     | NUMBER
   13     | IDENT


Terminals, with rules where they appear

$end (0) 0
';' (59) 1 2
error (256)
ADD (258) 6
SUB (259) 7 11
MUL (260) 8
DIV (261) 9
NUMBER (262) 12
LEFTPAR (263) 10
RIGHTPAR (264) 10
EQUAL (265) 4
IDENT (266) 4 13
UMINUS (267)


Nonterminals, with rules where they appear

$accept (14)
    on left: 0
lines (15)
    on left: 1 2 3, on right: 0 1 2
equalexpr (16)
    on left: 4 5, on right: 1 4
expr (17)
    on left: 6 7 8 9 10 11 12 13, on right: 5 6 7 8 9 10 11


state 0

    0 $accept: . lines $end

    $default  reduce using rule 3 (lines)

    lines  go to state 1


state 1

    0 $accept: lines . $end
    1 lines: lines . equalexpr ';'
    2      | lines . ';'

    $end     shift, and go to state 2
    SUB      shift, and go to state 3
    NUMBER   shift, and go to state 4
    LEFTPAR  shift, and go to state 5
    IDENT    shift, and go to state 6
    ';'      shift, and go to state 7

    equalexpr  go to state 8
    expr       go to state 9


state 2

    0 $accept: lines $end .

    $default  accept


state 3

   11 expr: SUB . expr

    SUB      shift, and go to state 3
    NUMBER   shift, and go to state 4
    LEFTPAR  shift, and go to state 5
    IDENT    shift, and go to state 10

    expr  go to state 11


state 4

   12 expr: NUMBER .

    $default  reduce using rule 12 (expr)


state 5

   10 expr: LEFTPAR . expr RIGHTPAR

    SUB      shift, and go to state 3
    NUMBER   shift, and go to state 4
    LEFTPAR  shift, and go to state 5
    IDENT    shift, and go to state 10

    expr  go to state 12


state 6

    4 equalexpr: IDENT . EQUAL equalexpr
   13 expr: IDENT .

    EQUAL  shift, and go to state 13

    $default  reduce using rule 13 (expr)


state 7

    2 lines: lines ';' .

    $default  reduce using rule 2 (lines)


state 8

    1 lines: lines equalexpr . ';'

    ';'  shift, and go to state 14


state 9

    5 equalexpr: expr .
    6 expr: expr . ADD expr
    7     | expr . SUB expr
    8     | expr . MUL expr
    9     | expr . DIV expr

    ADD  shift, and go to state 15
    SUB  shift, and go to state 16
    MUL  shift, and go to state 17
    DIV  shift, and go to state 18

    $default  reduce using rule 5 (equalexpr)


state 10

   13 expr: IDENT .

    $default  reduce using rule 13 (expr)


state 11

    6 expr: expr . ADD expr
    7     | expr . SUB expr
    8     | expr . MUL expr
    9     | expr . DIV expr
   11     | SUB expr .

    $default  reduce using rule 11 (expr)


state 12

    6 expr: expr . ADD expr
    7     | expr . SUB expr
    8     | expr . MUL expr
    9     | expr . DIV expr
   10     | LEFTPAR expr . RIGHTPAR

    ADD       shift, and go to state 15
    SUB       shift, and go to state 16
    MUL       shift, and go to state 17
    DIV       shift, and go to state 18
    RIGHTPAR  shift, and go to state 19


state 13

    4 equalexpr: IDENT EQUAL . equalexpr

    SUB      shift, and go to state 3
    NUMBER   shift, and go to state 4
    LEFTPAR  shift, and go to state 5
    IDENT    shift, and go to state 6

    equalexpr  go to state 20
    expr       go to state 9


state 14

    1 lines: lines equalexpr ';' .

    $default  reduce using rule 1 (lines)


state 15

    6 expr: expr ADD . expr

    SUB      shift, and go to state 3
    NUMBER   shift, and go to state 4
    LEFTPAR  shift, and go to state 5
    IDENT    shift, and go to state 10

    expr  go to state 21


state 16

    7 expr: expr SUB . expr

    SUB      shift, and go to state 3
    NUMBER   shift, and go to state 4
    LEFTPAR  shift, and go to state 5
    IDENT    shift, and go to state 10

    expr  go to state 22


state 17

    8 expr: expr MUL . expr

    SUB      shift, and go to state 3
    NUMBER   shift, and go to state 4
    LEFTPAR  shift, and go to state 5
    IDENT    shift, and go to state 10

    expr  go to state 23


state 18

    9 expr: expr DIV . expr

    SUB      shift, and go to state 3
    NUMBER   shift, and go to state 4
    LEFTPAR  shift, and go to state 5
    IDENT    shift, and go to state 10

    expr  go to state 24


state 19

   10 expr: LEFTPAR expr RIGHTPAR .

    $default  reduce using rule 10 (expr)


state 20

    4 equalexpr: IDENT EQUAL equalexpr .

    $default  reduce using rule 4 (equalexpr)


state 21

    6 expr: expr . ADD expr
    6     | expr ADD expr .
    7     | expr . SUB expr
    8     | expr . MUL expr
    9     | expr . DIV expr

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18

    $default  reduce using rule 6 (expr)


state 22

    6 expr: expr . ADD expr
    7     | expr . SUB expr
    7     | expr SUB expr .
    8     | expr . MUL expr
    9     | expr . DIV expr

    MUL  shift, and go to state 17
    DIV  shift, and go to state 18

    $default  reduce using rule 7 (expr)


state 23

    6 expr: expr . ADD expr
    7     | expr . SUB expr
    8     | expr . MUL expr
    8     | expr MUL expr .
    9     | expr . DIV expr

    $default  reduce using rule 8 (expr)


state 24

    6 expr: expr . ADD expr
    7     | expr . SUB expr
    8     | expr . MUL expr
    9     | expr . DIV expr
    9     | expr DIV expr .

    $default  reduce using rule 9 (expr)
